Inspecting 123 files
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCWCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:1: C: Layout/EndOfLine: Carriage return character detected.
source 'https://rubygems.org' ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
source 'https://rubygems.org'
^
Gemfile:34:28: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
  gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:44:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem listen should appear before rack-mini-profiler.
  gem 'listen', '~> 3.3'
  ^^^^^^^^^^^^^^^^^^^^^^
Gemfile:55:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem simplecov should appear before webdrivers.
  gem 'simplecov', :require => false
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:55:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  gem 'simplecov', :require => false
                   ^^^^^^^^^^^
Gemfile:59:31: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:62:14: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
gem 'rubocop'
             
Rakefile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Add your own tasks in files placed in lib/tasks ending in .rake,
^
Rakefile:4:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/application"
                 ^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/dashboard_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class DashboardController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class DashboardController.
class DashboardController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class DashboardController < ApplicationController
^
app/controllers/dashboard_controller.rb:2:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def index ...
  ^^^^^^^^^
app/controllers/events_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class EventsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class EventsController.
class EventsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventsController < ApplicationController
^
app/controllers/events_controller.rb:2:38: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_event, only: %i[ show edit update destroy ]
                                     ^
app/controllers/events_controller.rb:2:63: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_event, only: %i[ show edit update destroy ]
                                                              ^
app/controllers/events_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/events_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/events_controller.rb:28:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to event_url(@event), notice: "Event was successfully created." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:41:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to event_url(@event), notice: "Event was successfully updated." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:52:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/controllers/events_controller.rb:54:43: C: [Correctable] Style/SymbolProc: Pass &:destroy as an argument to each instead of a block.
    Point.where(event_id: @event.id).each do |point| ...
                                          ^^^^^^^^^^
app/controllers/events_controller.rb:61:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to events_url, notice: "Event was successfully destroyed." }
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:66:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/events_controller.rb:68:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_event
^^^^
app/controllers/events_controller.rb:68:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_event ...
    ^^^^^^^^^^^^^
app/controllers/events_controller.rb:73:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def event_params
^^^^
app/controllers/events_controller.rb:73:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def event_params ...
    ^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:74:121: C: [Correctable] Layout/LineLength: Line is too long. [138/120]
      params.require(:event).permit(:event_type, :start_date, :end_date, :start_time, :end_time, :description, :points, :members_attended)
                                                                                                                        ^^^^^^^^^^^^^^^^^^
app/controllers/leaderboard_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class LeaderboardController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/leaderboard_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class LeaderboardController.
class LeaderboardController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/leaderboard_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class LeaderboardController < ApplicationController
^
app/controllers/leaderboard_controller.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/controllers/leaderboard_controller.rb:5:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align .joins with Point on line 4.
    .joins("INNER JOIN members ON members.id=points.member_id")
    ^^^^^^
app/controllers/leaderboard_controller.rb:5:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    .joins("INNER JOIN members ON members.id=points.member_id")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/leaderboard_controller.rb:6:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align .group with Point on line 4.
    .group('members.name, points.member_id')
    ^^^^^^
app/controllers/leaderboard_controller.rb:7:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align .select with Point on line 4.
    .select('members.name, points.member_id as id, sum(points.points) as points')
    ^^^^^^^
app/controllers/leaderboard_controller.rb:8:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/members_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class MembersController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class MembersController.
class MembersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class MembersController < ApplicationController
^
app/controllers/members_controller.rb:2:39: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_member, only: %i[ show edit update destroy ]
                                      ^
app/controllers/members_controller.rb:2:64: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_member, only: %i[ show edit update destroy ]
                                                               ^
app/controllers/members_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/members_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/members_controller.rb:28:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to member_url(@member), notice: "Member was successfully created." }
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:41:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to member_url(@member), notice: "Member was successfully updated." }
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:52:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/controllers/members_controller.rb:54:45: C: [Correctable] Style/SymbolProc: Pass &:destroy as an argument to each instead of a block.
    Point.where(member_id: @member.id).each do |point| ...
                                            ^^^^^^^^^^
app/controllers/members_controller.rb:61:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to members_url, notice: "Member was successfully destroyed." }
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:66:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/members_controller.rb:68:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_member
^^^^
app/controllers/members_controller.rb:68:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_member ...
    ^^^^^^^^^^^^^^
app/controllers/members_controller.rb:73:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def member_params
^^^^
app/controllers/members_controller.rb:73:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def member_params ...
    ^^^^^^^^^^^^^^^^^
app/controllers/plants_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class PlantsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/plants_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class PlantsController.
class PlantsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^
app/controllers/plants_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PlantsController < ApplicationController
^
app/controllers/plants_controller.rb:2:38: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_plant, only: %i[ show edit update destroy ]
                                     ^
app/controllers/plants_controller.rb:2:63: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_plant, only: %i[ show edit update destroy ]
                                                              ^
app/controllers/plants_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/plants_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/plants_controller.rb:28:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to plant_url(@plant), notice: "Plant was successfully created." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/plants_controller.rb:41:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to plant_url(@plant), notice: "Plant was successfully updated." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/plants_controller.rb:55:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to plant_url, notice: "Plant was successfully destroyed." }
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/plants_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/plants_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_plant
^^^^
app/controllers/plants_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_plant ...
    ^^^^^^^^^^^^^
app/controllers/plants_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def plant_params
^^^^
app/controllers/plants_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def plant_params ...
    ^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class PointsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class PointsController.
class PointsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PointsController < ApplicationController
^
app/controllers/points_controller.rb:2:38: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_point, only: %i[ show edit update destroy ]
                                     ^
app/controllers/points_controller.rb:2:63: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_point, only: %i[ show edit update destroy ]
                                                              ^
app/controllers/points_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/points_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/points_controller.rb:23:3: C: Metrics/AbcSize: Assignment Branch Condition size for create is too high. [<2, 21, 2> 21.19/17]
  def create ...
  ^^^^^^^^^^
app/controllers/points_controller.rb:24:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/points_controller.rb:25:121: C: [Correctable] Layout/LineLength: Line is too long. [146/120]
    @point = Point.new(event_id: point_params[:event_id], member_id: point_params[:member_id], points: Event.find(point_params[:event_id]).points)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:29:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to point_url(@point), notice: "Point was successfully created." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:42:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to point_url(@point), notice: "Point was successfully updated." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:56:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to points_url, notice: "Point was successfully destroyed." }
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:61:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/points_controller.rb:63:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_point
^^^^
app/controllers/points_controller.rb:63:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_point ...
    ^^^^^^^^^^^^^
app/controllers/points_controller.rb:68:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def point_params
^^^^
app/controllers/points_controller.rb:68:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def point_params ...
    ^^^^^^^^^^^^^^^^
app/controllers/positions_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class PositionsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/positions_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class PositionsController.
class PositionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/positions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PositionsController < ApplicationController
^
app/controllers/positions_controller.rb:2:41: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_position, only: %i[ show edit update destroy ]
                                        ^
app/controllers/positions_controller.rb:2:66: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_position, only: %i[ show edit update destroy ]
                                                                 ^
app/controllers/positions_controller.rb:3:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/positions_controller.rb:32:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to position_url(@position), notice: "Position was successfully created." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/positions_controller.rb:45:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to position_url(@position), notice: "Position was successfully updated." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/positions_controller.rb:59:56: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to positions_url, notice: "Position was successfully destroyed." }
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/positions_controller.rb:64:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/positions_controller.rb:66:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_position
^^^^
app/controllers/positions_controller.rb:66:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_position ...
    ^^^^^^^^^^^^^^^^
app/controllers/positions_controller.rb:71:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def position_params
^^^^
app/controllers/positions_controller.rb:71:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def position_params ...
    ^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ApplicationHelper.
module ApplicationHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationHelper
^
app/helpers/dashboard_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module DashboardHelper ...
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/dashboard_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module DashboardHelper.
module DashboardHelper
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/dashboard_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module DashboardHelper
^
app/helpers/events_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module EventsHelper ...
^^^^^^^^^^^^^^^^^^^
app/helpers/events_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module EventsHelper.
module EventsHelper
^^^^^^^^^^^^^^^^^^^
app/helpers/events_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module EventsHelper
^
app/helpers/leaderboard_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module LeaderboardHelper ...
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/leaderboard_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module LeaderboardHelper.
module LeaderboardHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/leaderboard_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module LeaderboardHelper
^
app/helpers/members_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module MembersHelper ...
^^^^^^^^^^^^^^^^^^^^
app/helpers/members_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module MembersHelper.
module MembersHelper
^^^^^^^^^^^^^^^^^^^^
app/helpers/members_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module MembersHelper
^
app/helpers/plants_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module PlantsHelper ...
^^^^^^^^^^^^^^^^^^^
app/helpers/plants_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module PlantsHelper.
module PlantsHelper
^^^^^^^^^^^^^^^^^^^
app/helpers/plants_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module PlantsHelper
^
app/helpers/points_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module PointsHelper ...
^^^^^^^^^^^^^^^^^^^
app/helpers/points_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module PointsHelper.
module PointsHelper
^^^^^^^^^^^^^^^^^^^
app/helpers/points_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module PointsHelper
^
app/helpers/positions_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module PositionsHelper ...
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/positions_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module PositionsHelper.
module PositionsHelper
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/positions_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module PositionsHelper
^
app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationJob < ActiveJob::Base
^
app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationMailer < ActionMailer::Base
^
app/models/application_record.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationRecord.
class ApplicationRecord < ActiveRecord::Base
^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/event.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Event < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/event.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Event < ApplicationRecord
^
app/models/event.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :event_type, :start_date, :description, :points, presence: true
^^^^
app/models/event.rb:5:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 2).
    # has_many :members, through: :points
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/member.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Member < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/member.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Member < ApplicationRecord
^
app/models/member.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
   validates :name, presence: true
^^^
app/models/member.rb:5:4: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 3 instead of 2).
   # has_many :events, through: :points
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/plant.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Plant < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/plant.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Plant < ApplicationRecord
^
app/models/plant.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :plant_id, presence: true
^^^^
app/models/plant.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :name, presence: true
^^^^
app/models/plant.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :price, presence: true
^^^^
app/models/plant.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates :description, presence: true
^
app/models/plant.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates :description, presence: true
^
app/models/plant.rb:5:2: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	validates :description, presence: true
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/plant.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	validates :icon, presence: true
^
app/models/plant.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	validates :icon, presence: true
^
app/models/plant.rb:6:2: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	validates :icon, presence: true
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/point.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Point < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/point.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Point < ApplicationRecord
^
app/models/point.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :member_id, presence: true
^^^^
app/models/point.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :event_id, presence: true
^^^^
app/models/point.rb:4:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #validates :points, presence: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/point.rb:7:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 2).
    # belongs_to :event
    ^^^^^^^^^^^^^^^^^^^
app/models/position.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Position < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/position.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Position < ApplicationRecord
^
app/views/events/_event.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! event, :id, :event_type, :start_date, :end_date, :start_time, :end_time, :description, :points, :members_attended, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/events/_event.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! event, :id, :event_type, :start_date, :end_date, :start_time, :end_time, :description, :points, :members_attended, :created_at, :updated_at
^
app/views/events/_event.json.jbuilder:1:121: C: [Correctable] Layout/LineLength: Line is too long. [153/120]
json.extract! event, :id, :event_type, :start_date, :end_date, :start_time, :end_time, :description, :points, :members_attended, :created_at, :updated_at
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/events/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @events, partial: "events/event", as: :event ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/events/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @events, partial: "events/event", as: :event
^
app/views/events/index.json.jbuilder:1:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @events, partial: "events/event", as: :event
                              ^^^^^^^^^^^^^^
app/views/events/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "events/event", event: @event ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/events/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "events/event", event: @event
^
app/views/events/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "events/event", event: @event
              ^^^^^^^^^^^^^^
app/views/members/_member.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! member, :id, :name, :events_attended, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/members/_member.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! member, :id, :name, :events_attended, :created_at, :updated_at
^
app/views/members/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @members, partial: "members/member", as: :member ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/members/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @members, partial: "members/member", as: :member
^
app/views/members/index.json.jbuilder:1:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @members, partial: "members/member", as: :member
                               ^^^^^^^^^^^^^^^^
app/views/members/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "members/member", member: @member ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/members/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "members/member", member: @member
^
app/views/members/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "members/member", member: @member
              ^^^^^^^^^^^^^^^^
app/views/points/_point.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! point, :id, :member_id, :event_id, :points, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/points/_point.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! point, :id, :member_id, :event_id, :points, :created_at, :updated_at
^
app/views/points/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @points, partial: "points/point", as: :point ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/points/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @points, partial: "points/point", as: :point
^
app/views/points/index.json.jbuilder:1:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @points, partial: "points/point", as: :point
                              ^^^^^^^^^^^^^^
app/views/points/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "points/point", point: @point ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/points/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "points/point", point: @point
^
app/views/points/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "points/point", point: @point
              ^^^^^^^^^^^^^^
app/views/positions/_position.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! position, :id, :member_id, :position_name, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/positions/_position.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! position, :id, :member_id, :position_name, :created_at, :updated_at
^
app/views/positions/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @positions, partial: "positions/position", as: :position ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/positions/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @positions, partial: "positions/position", as: :position
^
app/views/positions/index.json.jbuilder:1:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @positions, partial: "positions/position", as: :position
                                 ^^^^^^^^^^^^^^^^^^^^
app/views/positions/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "positions/position", position: @position ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/positions/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "positions/position", position: @position
^
app/views/positions/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "positions/position", position: @position
              ^^^^^^^^^^^^^^^^^^^^
bin/bundle:11:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rubygems"
        ^^^^^^^^^^
bin/bundle:17:22: C: [Correctable] Style/SpecialGlobalVars: Prefer $PROGRAM_NAME over $0.
    File.expand_path($0) == File.expand_path(__FILE__)
                     ^^
bin/bundle:21:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["BUNDLER_VERSION"]
        ^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for cli_arg_version is too high. [9/7]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/MethodLength: Method has too many lines. [13/10]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/PerceivedComplexity: Perceived complexity for cli_arg_version is too high. [9/8]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:26:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:26:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
                  ^^^^^^^^
bin/bundle:26:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
                                                     ^^^
bin/bundle:30:7: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if update_index && update_index.succ == i && a =~ Gem::Version::ANCHORED_VERSION_PATTERN
      ^^
bin/bundle:33:7: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      next unless a =~ /\A--bundler(?:[= ](#{Gem::Version::VERSION_PATTERN}))?\z/
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:34:25: C: [Correctable] Style/PerlBackrefs: Prefer Regexp.last_match(1) over $1.
      bundler_version = $1
                        ^^
bin/bundle:41:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    gemfile = ENV["BUNDLE_GEMFILE"]
                  ^^^^^^^^^^^^^^^^
bin/bundle:44:10: C: [Correctable] Style/ExpandPathArguments: Use expand_path('../Gemfile', __dir__) instead of expand_path('../../Gemfile', __FILE__).
    File.expand_path("../../Gemfile", __FILE__)
         ^^^^^^^^^^^
bin/bundle:44:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.expand_path("../../Gemfile", __FILE__)
                     ^^^^^^^^^^^^^^^
bin/bundle:50:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      when "gems.rb" then gemfile.sub(/\.rb$/, gemfile)
           ^^^^^^^^^
bin/bundle:57:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless File.file?(lockfile)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:59:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless lockfile_contents =~ /\n\nBUNDLED WITH\n\s{2,}(#{Gem::Version::VERSION_PATTERN})\n/
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:66:9: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of an expression in an assignment spanning multiple lines.
        bundler_requirement_for(lockfile_version)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:76:81: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return requirement unless Gem::Version.new(Gem::VERSION) < Gem::Version.new("2.7.0")
                                                                                ^^^^^^^
bin/bundle:78:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    requirement += ".a" if bundler_gem_version.prerelease?
                   ^^^^
bin/bundle:84:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["BUNDLE_GEMFILE"] ||= gemfile
        ^^^^^^^^^^^^^^^^
bin/bundle:91:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      gem "bundler", bundler_requirement
          ^^^^^^^^^
bin/bundle:93:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return if gem_error.nil?
    ^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:95:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      require "bundler/version"
              ^^^^^^^^^^^^^^^^^
bin/bundle:97:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:97:12: C: [Correctable] Style/IfUnlessModifier: Modifier form of if makes the line too long.
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
           ^^
bin/bundle:97:121: C: Layout/LineLength: Line is too long. [127/120]
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
                                                                                                                        ^^^^^^^
bin/bundle:98:121: C: Layout/LineLength: Line is too long. [198/120]
    warn "Activating bundler (#{bundler_requirement}) failed:\n#{gem_error.message}\n\nTo install the version of bundler this project requires, run `gem install bundler -v '#{bundler_requirement}'`"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:112:1: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
if m.invoked_as_script?
^^
bin/bundle:113:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load Gem.bin_path("bundler", "bundle")
                    ^^^^^^^^^
bin/bundle:113:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load Gem.bin_path("bundler", "bundle")
                               ^^^^^^^^
bin/rails:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rails:2:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
load File.expand_path("spring", __dir__)
                      ^^^^^^^^
bin/rails:4:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/boot"
                 ^^^^^^^^^^^^^^^^
bin/rails:5:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/commands"
        ^^^^^^^^^^^^^^^^
bin/rake:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rake:2:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
load File.expand_path("spring", __dir__)
                      ^^^^^^^^
bin/rake:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/boot"
                 ^^^^^^^^^^^^^^^^
bin/rake:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rake"
        ^^^^^^
bin/setup:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/setup:2:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "fileutils"
        ^^^^^^^^^^^
bin/spring:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/spring:2:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
if !defined?(Spring) && [nil, "development", "test"].include?(ENV["RAILS_ENV"])
                              ^^^^^^^^^^^^^
bin/spring:2:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
if !defined?(Spring) && [nil, "development", "test"].include?(ENV["RAILS_ENV"])
                                             ^^^^^^
bin/spring:2:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
if !defined?(Spring) && [nil, "development", "test"].include?(ENV["RAILS_ENV"])
                                                                  ^^^^^^^^^^^
bin/spring:3:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "bundler"
      ^^^^^^^^^
bin/spring:4:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  require "bundler"
          ^^^^^^^^^
bin/spring:7:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Bundler.locked_gems&.specs&.find { |spec| spec.name == "spring" }&.tap do |spring|
                                                         ^^^^^^^^
bin/spring:9:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    gem "spring", spring.version
        ^^^^^^^^
bin/spring:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    require "spring/binstub"
            ^^^^^^^^^^^^^^^^
bin/webpack:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
    ^^^^^^^^^^^
bin/webpack:3:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                         ^^^^^^^^^^
bin/webpack:3:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                                        ^^^^^^^^^^^^^
bin/webpack:4:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
    ^^^^^^^^^^
bin/webpack:4:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
                     ^^^^^^^^^^^^^
bin/webpack:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "pathname"
        ^^^^^^^^^^
bin/webpack:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
    ^^^^^^^^^^^^^^^^
bin/webpack:7:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                           ^^^^^^^^^^^^^^^
bin/webpack:8:3: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
  Pathname.new(__FILE__).realpath)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack:10:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup"
        ^^^^^^^^^^^^^^^
bin/webpack:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker"
        ^^^^^^^^^^^
bin/webpack:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker/webpack_runner"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack:15:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_ROOT = File.expand_path("..", __dir__)
                            ^^^^
bin/webpack-dev-server:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack-dev-server:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
    ^^^^^^^^^^^
bin/webpack-dev-server:3:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                         ^^^^^^^^^^
bin/webpack-dev-server:3:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                                        ^^^^^^^^^^^^^
bin/webpack-dev-server:4:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
    ^^^^^^^^^^
bin/webpack-dev-server:4:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
                     ^^^^^^^^^^^^^
bin/webpack-dev-server:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "pathname"
        ^^^^^^^^^^
bin/webpack-dev-server:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
    ^^^^^^^^^^^^^^^^
bin/webpack-dev-server:7:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                           ^^^^^^^^^^^^^^^
bin/webpack-dev-server:8:3: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
  Pathname.new(__FILE__).realpath)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:10:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup"
        ^^^^^^^^^^^^^^^
bin/webpack-dev-server:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker"
        ^^^^^^^^^^^
bin/webpack-dev-server:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker/dev_server_runner"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:15:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_ROOT = File.expand_path("..", __dir__)
                            ^^^^
bin/yarn:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/yarn:4:10: C: [Correctable] Style/InverseMethods: Use reject instead of inverting select.
  yarn = ENV["PATH"].split(File::PATH_SEPARATOR). ...
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/yarn:4:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  yarn = ENV["PATH"].split(File::PATH_SEPARATOR).
             ^^^^^^
bin/yarn:4:49: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
  yarn = ENV["PATH"].split(File::PATH_SEPARATOR).
                                                ^
bin/yarn:5:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align select with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    select { |dir| File.expand_path(dir) != __dir__ }.
    ^^^^^^
bin/yarn:5:54: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
    select { |dir| File.expand_path(dir) != __dir__ }.
                                                     ^
bin/yarn:6:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align product with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
    ^^^^^^^
bin/yarn:6:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
             ^^^^^^
bin/yarn:6:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
                     ^^^^^^^^^^
bin/yarn:6:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
                                 ^^^^^^^^^^
bin/yarn:6:46: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
                                             ^
bin/yarn:7:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align map with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    map { |dir, file| File.expand_path(file, dir) }.
    ^^^
bin/yarn:7:52: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
    map { |dir, file| File.expand_path(file, dir) }.
                                                   ^
bin/yarn:8:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align find with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    find { |file| File.executable?(file) }
    ^^^^
bin/yarn:13:5: C: [Correctable] Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
    $stderr.puts "Yarn executable was not detected in the system."
    ^^^^^^^^^^^^
bin/yarn:13:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    $stderr.puts "Yarn executable was not detected in the system."
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/yarn:14:5: C: [Correctable] Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
    $stderr.puts "Download Yarn at https://yarnpkg.com/en/docs/install"
    ^^^^^^^^^^^^
bin/yarn:14:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    $stderr.puts "Download Yarn at https://yarnpkg.com/en/docs/install"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is used by Rack-based servers to start the application.
^
config.ru:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/environment"
                 ^^^^^^^^^^^^^^^^^^^^
config/application.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative "boot"
^
config/application.rb:1:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "boot"
                 ^^^^^^
config/application.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/all"
        ^^^^^^^^^^^
config/application.rb:10:3: C: Style/Documentation: Missing top-level documentation comment for class HorticultureTracker::Application.
  class Application < Rails::Application
  ^^^^^^^^^^^^^^^^^
config/boot.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
^
config/boot.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup" # Set up gems listed in the Gemfile.
        ^^^^^^^^^^^^^^^
config/boot.rb:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bootsnap/setup" # Speed up boot time by caching expensive operations.
        ^^^^^^^^^^^^^^^^
config/environment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Load the Rails application.
^
config/environment.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "application"
                 ^^^^^^^^^^^^^
config/environments/development.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/development.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/production.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:56:22: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                     ^
config/environments/production.rb:56:34: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                                 ^
config/environments/production.rb:91:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if ENV["RAILS_LOG_TO_STDOUT"].present?
         ^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:92:50: C: [Correctable] Style/GlobalStdStream: Use $stdout instead of STDOUT.
    logger           = ActiveSupport::Logger.new(STDOUT)
                                                 ^^^^^^
config/environments/test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/application_controller_renderer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:8:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Rails.backtrace_cleaner.remove_silencers! if ENV["BACKTRACE"]
                                                 ^^^^^^^^^^^
config/initializers/content_security_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/cookies_serializer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:4:47: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
Rails.application.config.filter_parameters += [ ...
                                              ^
config/initializers/inflections.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/mime_types.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/permissions_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Define an application-wide HTTP permissions policy. For further
^
config/initializers/wrap_parameters.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/puma.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Puma can serve each request in a thread from an internal thread pool.
^
config/puma.rb:7:25: C: [Correctable] Style/RedundantFetchBlock: Use fetch("RAILS_MAX_THREADS", 5) instead of fetch("RAILS_MAX_THREADS") { 5 }.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:7:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:8:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
min_threads_count = ENV.fetch("RAILS_MIN_THREADS") { max_threads_count }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:14:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                 ^^^^^^^^^^^
config/puma.rb:14:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                              ^^^^^^^^^^^^^
config/puma.rb:14:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                                                ^^^^^^^^^^^^^
config/puma.rb:18:10: C: [Correctable] Style/RedundantFetchBlock: Use fetch("PORT", 3000) instead of fetch("PORT") { 3000 }.
port ENV.fetch("PORT") { 3000 }
         ^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
port ENV.fetch("PORT") { 3000 }
               ^^^^^^
config/puma.rb:22:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                      ^^^^^^^^^^^
config/puma.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                                     ^^^^^^^^^^^^^
config/puma.rb:25:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                  ^^^^^^^^^
config/puma.rb:25:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                               ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
Rails.application.routes.draw do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Rails.application.routes.draw do
^
config/spring.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Spring.watch(
^
config/spring.rb:2:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ".ruby-version",
  ^^^^^^^^^^^^^^^
config/spring.rb:3:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ".rbenv-vars",
  ^^^^^^^^^^^^^
config/spring.rb:4:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "tmp/restart.txt",
  ^^^^^^^^^^^^^^^^^
config/spring.rb:5:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "tmp/caching-dev.txt"
  ^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220209213601_create_events.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateEvents < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220209213601_create_events.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateEvents.
class CreateEvents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^
db/migrate/20220209213601_create_events.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateEvents < ActiveRecord::Migration[6.1]
^
db/migrate/20220209213601_create_events.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20220210035221_create_members.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateMembers < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220210035221_create_members.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateMembers.
class CreateMembers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^
db/migrate/20220210035221_create_members.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateMembers < ActiveRecord::Migration[6.1]
^
db/migrate/20220210194825_create_points.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreatePoints < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220210194825_create_points.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreatePoints.
class CreatePoints < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^
db/migrate/20220210194825_create_points.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreatePoints < ActiveRecord::Migration[6.1]
^
db/migrate/20220213012102_create_plants.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreatePlants < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220213012102_create_plants.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreatePlants.
class CreatePlants < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^
db/migrate/20220213012102_create_plants.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreatePlants < ActiveRecord::Migration[6.1]
^
db/migrate/20220213012102_create_plants.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  t.integer :plant_id
^
db/migrate/20220213012102_create_plants.rb:4:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not -1) spaces for indentation.
	  t.integer :plant_id
   ^
db/migrate/20220213012102_create_plants.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  t.string :name
^
db/migrate/20220213012102_create_plants.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  t.decimal :price
^
db/migrate/20220213012102_create_plants.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  t.string :description
^
db/migrate/20220213012102_create_plants.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  t.string :icon
^
db/migrate/20220213012102_create_plants.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
db/migrate/20220213012102_create_plants.rb:9:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
db/migrate/20220213012102_create_plants.rb:10:7: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
      t.timestamps
      ^^^^^^^^^^^^
db/migrate/20220214224217_create_positions.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreatePositions < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220214224217_create_positions.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreatePositions.
class CreatePositions < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220214224217_create_positions.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreatePositions < ActiveRecord::Migration[6.1]
^
db/schema.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is auto-generated from the current state of the database. Instead
^
db/schema.rb:13:1: C: Metrics/BlockLength: Block has too many lines. [41/25]
ActiveRecord::Schema.define(version: 2022_02_14_224217) do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:13:38: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
ActiveRecord::Schema.define(version: 2022_02_14_224217) do
                                     ^^^^^^^^^^^^^^^^^
db/schema.rb:14:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
db/schema.rb:16:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  enable_extension "plpgsql"
                   ^^^^^^^^^
db/schema.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "events", force: :cascade do |t|
               ^^^^^^^^
db/schema.rb:19:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "event_type"
             ^^^^^^^^^^^^
db/schema.rb:20:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.date "start_date"
           ^^^^^^^^^^^^
db/schema.rb:21:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.date "end_date"
           ^^^^^^^^^^
db/schema.rb:22:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.time "start_time"
           ^^^^^^^^^^^^
db/schema.rb:23:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.time "end_time"
           ^^^^^^^^^^
db/schema.rb:24:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "description"
             ^^^^^^^^^^^^^
db/schema.rb:25:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "points"
              ^^^^^^^^
db/schema.rb:26:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "members_attended"
             ^^^^^^^^^^^^^^^^^^
db/schema.rb:27:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:28:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:31:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "members", force: :cascade do |t|
               ^^^^^^^^^
db/schema.rb:32:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:33:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "events_attended"
             ^^^^^^^^^^^^^^^^^
db/schema.rb:34:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:35:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:38:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "plants", force: :cascade do |t|
               ^^^^^^^^
db/schema.rb:39:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "plant_id"
              ^^^^^^^^^^
db/schema.rb:40:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:41:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.decimal "price"
              ^^^^^^^
db/schema.rb:42:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "description"
             ^^^^^^^^^^^^^
db/schema.rb:43:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "icon"
             ^^^^^^
db/schema.rb:44:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:45:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:48:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "points", force: :cascade do |t|
               ^^^^^^^^
db/schema.rb:49:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "member_id"
              ^^^^^^^^^^^
db/schema.rb:50:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "event_id"
              ^^^^^^^^^^
db/schema.rb:51:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "points"
              ^^^^^^^^
db/schema.rb:52:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:53:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:56:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "positions", force: :cascade do |t|
               ^^^^^^^^^^^
db/schema.rb:57:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "member_id"
              ^^^^^^^^^^^
db/schema.rb:58:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "position_name"
             ^^^^^^^^^^^^^^^
db/schema.rb:59:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:60:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:62:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file should contain all the record creation needed to seed the database with its default values.
^
spec/feature/integration_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/feature/integration_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'valid inputs' do
^^^^
spec/feature/integration_spec.rb:5:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_event_path
    ^^^^
spec/feature/integration_spec.rb:9:24: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select '2022', :from => 'event_start_date_1i'
                       ^^^^^^^^
spec/feature/integration_spec.rb:10:28: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select 'February', :from => 'event_start_date_2i'
                           ^^^^^^^^
spec/feature/integration_spec.rb:11:22: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select '14', :from => 'event_start_date_3i'
                     ^^^^^^^^
spec/feature/integration_spec.rb:12:24: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select '2022', :from => 'event_end_date_1i'
                       ^^^^^^^^
spec/feature/integration_spec.rb:13:28: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select 'February', :from => 'event_end_date_2i'
                           ^^^^^^^^
spec/feature/integration_spec.rb:14:22: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select '14', :from => 'event_end_date_3i'
                     ^^^^^^^^
spec/feature/integration_spec.rb:25:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'valid inputs' do
^^^^
spec/feature/integration_spec.rb:26:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_member_path
    ^^^^
spec/feature/integration_spec.rb:34:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'valid inputs' do
^^^^
spec/feature/integration_spec.rb:35:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_member_path
    ^^^^
spec/feature/integration_spec.rb:42:24: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select '2022', :from => 'event_start_date_1i'
                       ^^^^^^^^
spec/feature/integration_spec.rb:43:28: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select 'February', :from => 'event_start_date_2i'
                           ^^^^^^^^
spec/feature/integration_spec.rb:44:22: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select '14', :from => 'event_start_date_3i'
                     ^^^^^^^^
spec/feature/integration_spec.rb:45:24: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select '2022', :from => 'event_end_date_1i'
                       ^^^^^^^^
spec/feature/integration_spec.rb:46:28: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select 'February', :from => 'event_end_date_2i'
                           ^^^^^^^^
spec/feature/integration_spec.rb:47:22: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        select '14', :from => 'event_end_date_3i'
                     ^^^^^^^^
spec/feature/integration_spec.rb:56:8: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    end 
       ^
spec/feature/integration_spec.rb:57:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/helpers/dashboard_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/dashboard_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/events_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/events_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/leaderboard_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/leaderboard_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/members_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/members_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/points_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/points_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/positions_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/positions_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/event_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/member_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/member_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/point_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/point_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/position_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/position_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/rails_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file is copied to spec/ when you run 'rails generate rspec:install' ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/rails_helper.rb:6:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/dashboard_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/dashboard_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/dashboard_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Dashboards", type: :request do
               ^^^^^^^^^^^^
spec/requests/dashboard_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/dashboard_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/dashboard_spec.rb:6:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/dashboard"
          ^^^^^^^^^^^^
spec/requests/dashboard_spec.rb:10:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/requests/events_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/events_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/events", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/events", type: :request do
               ^^^^^^^^^
spec/requests/events_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/events_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/events_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/events_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/events_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/events_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/events_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/events_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/events_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Event" do
         ^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/events_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new Event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/events_spec.rb:87:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:88:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:89:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/events_spec.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:100:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:108:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:117:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:118:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested event" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:120:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/events_spec.rb:125:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the events list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:126:7: W: Lint/UselessAssignment: Useless assignment to variable - event.
      event = Event.create! valid_attributes
      ^^^^^
spec/requests/leaderboard_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/leaderboard_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/leaderboard_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Leaderboards", type: :request do
               ^^^^^^^^^^^^^^
spec/requests/leaderboard_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/leaderboard_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/leaderboard_spec.rb:6:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/leaderboard"
          ^^^^^^^^^^^^^^
spec/requests/leaderboard_spec.rb:10:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/requests/members_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/members_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/members", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/members", type: :request do
               ^^^^^^^^^^
spec/requests/members_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/members_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/members_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/members_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/members_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/members_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/members_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/members_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/members_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Member" do
         ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/members_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created member" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new Member" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/members_spec.rb:87:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:88:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:89:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/members_spec.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested member" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:100:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the member" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:108:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:117:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:118:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested member" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/members_spec.rb:120:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/members_spec.rb:125:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the members list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/points_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/points", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/points", type: :request do
               ^^^^^^^^^
spec/requests/points_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/points_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/points_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/points_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:28:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/points_spec.rb:29:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/points_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:36:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/points_spec.rb:37:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/points_spec.rb:38:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:45:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/points_spec.rb:46:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:52:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/points_spec.rb:53:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:60:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/points_spec.rb:61:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:62:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Point" do
         ^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:63:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/points_spec.rb:68:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created point" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:74:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:75:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new Point" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:76:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/points_spec.rb:88:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:89:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:90:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/points_spec.rb:91:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:94:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested point" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:98:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:101:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the point" do
         ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:109:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:118:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:119:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested point" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/points_spec.rb:121:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/points_spec.rb:126:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the points list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/positions_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/positions", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/positions", type: :request do
               ^^^^^^^^^^^^
spec/requests/positions_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/positions_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/positions_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/positions_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/positions_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/positions_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/positions_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/positions_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Position" do
         ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/positions_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created position" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new Position" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/positions_spec.rb:87:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:88:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:89:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/positions_spec.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested position" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:100:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the position" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:108:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:117:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:118:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested position" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/positions_spec.rb:120:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/positions_spec.rb:125:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the positions list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/events_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe EventsController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/events_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events").to route_to("events#index")
                  ^^^^^^^^^
spec/routing/events_routing_spec.rb:6:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events").to route_to("events#index")
                                         ^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/new").to route_to("events#new")
                  ^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:10:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/new").to route_to("events#new")
                                             ^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1").to route_to("events#show", id: "1")
                  ^^^^^^^^^^^
spec/routing/events_routing_spec.rb:14:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1").to route_to("events#show", id: "1")
                                           ^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:14:63: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1").to route_to("events#show", id: "1")
                                                              ^^^
spec/routing/events_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1/edit").to route_to("events#edit", id: "1")
                  ^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:18:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1/edit").to route_to("events#edit", id: "1")
                                                ^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:18:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1/edit").to route_to("events#edit", id: "1")
                                                                   ^^^
spec/routing/events_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/events_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/events").to route_to("events#create")
                   ^^^^^^^^^
spec/routing/events_routing_spec.rb:23:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/events").to route_to("events#create")
                                          ^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/events/1").to route_to("events#update", id: "1")
                  ^^^^^^^^^^^
spec/routing/events_routing_spec.rb:27:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/events/1").to route_to("events#update", id: "1")
                                           ^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:27:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/events/1").to route_to("events#update", id: "1")
                                                                ^^^
spec/routing/events_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/events/1").to route_to("events#update", id: "1")
                    ^^^^^^^^^^^
spec/routing/events_routing_spec.rb:31:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/events/1").to route_to("events#update", id: "1")
                                             ^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:31:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/events/1").to route_to("events#update", id: "1")
                                                                  ^^^
spec/routing/events_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/events/1").to route_to("events#destroy", id: "1")
                     ^^^^^^^^^^^
spec/routing/events_routing_spec.rb:35:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/events/1").to route_to("events#destroy", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:35:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/events/1").to route_to("events#destroy", id: "1")
                                                                    ^^^
spec/routing/members_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/members_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe MembersController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/members_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members").to route_to("members#index")
                  ^^^^^^^^^^
spec/routing/members_routing_spec.rb:6:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members").to route_to("members#index")
                                          ^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members/new").to route_to("members#new")
                  ^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:10:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members/new").to route_to("members#new")
                                              ^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members/1").to route_to("members#show", id: "1")
                  ^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:14:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members/1").to route_to("members#show", id: "1")
                                            ^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:14:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members/1").to route_to("members#show", id: "1")
                                                                ^^^
spec/routing/members_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members/1/edit").to route_to("members#edit", id: "1")
                  ^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:18:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members/1/edit").to route_to("members#edit", id: "1")
                                                 ^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:18:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/members/1/edit").to route_to("members#edit", id: "1")
                                                                     ^^^
spec/routing/members_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/members_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/members").to route_to("members#create")
                   ^^^^^^^^^^
spec/routing/members_routing_spec.rb:23:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/members").to route_to("members#create")
                                           ^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/members/1").to route_to("members#update", id: "1")
                  ^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:27:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/members/1").to route_to("members#update", id: "1")
                                            ^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:27:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/members/1").to route_to("members#update", id: "1")
                                                                  ^^^
spec/routing/members_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/members/1").to route_to("members#update", id: "1")
                    ^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:31:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/members/1").to route_to("members#update", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:31:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/members/1").to route_to("members#update", id: "1")
                                                                    ^^^
spec/routing/members_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/members/1").to route_to("members#destroy", id: "1")
                     ^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:35:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/members/1").to route_to("members#destroy", id: "1")
                                               ^^^^^^^^^^^^^^^^^
spec/routing/members_routing_spec.rb:35:71: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/members/1").to route_to("members#destroy", id: "1")
                                                                      ^^^
spec/routing/points_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/points_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe PointsController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/points_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points").to route_to("points#index")
                  ^^^^^^^^^
spec/routing/points_routing_spec.rb:6:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points").to route_to("points#index")
                                         ^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points/new").to route_to("points#new")
                  ^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:10:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points/new").to route_to("points#new")
                                             ^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points/1").to route_to("points#show", id: "1")
                  ^^^^^^^^^^^
spec/routing/points_routing_spec.rb:14:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points/1").to route_to("points#show", id: "1")
                                           ^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:14:63: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points/1").to route_to("points#show", id: "1")
                                                              ^^^
spec/routing/points_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points/1/edit").to route_to("points#edit", id: "1")
                  ^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:18:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points/1/edit").to route_to("points#edit", id: "1")
                                                ^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:18:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/points/1/edit").to route_to("points#edit", id: "1")
                                                                   ^^^
spec/routing/points_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/points_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/points").to route_to("points#create")
                   ^^^^^^^^^
spec/routing/points_routing_spec.rb:23:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/points").to route_to("points#create")
                                          ^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/points/1").to route_to("points#update", id: "1")
                  ^^^^^^^^^^^
spec/routing/points_routing_spec.rb:27:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/points/1").to route_to("points#update", id: "1")
                                           ^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:27:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/points/1").to route_to("points#update", id: "1")
                                                                ^^^
spec/routing/points_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/points/1").to route_to("points#update", id: "1")
                    ^^^^^^^^^^^
spec/routing/points_routing_spec.rb:31:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/points/1").to route_to("points#update", id: "1")
                                             ^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:31:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/points/1").to route_to("points#update", id: "1")
                                                                  ^^^
spec/routing/points_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/points/1").to route_to("points#destroy", id: "1")
                     ^^^^^^^^^^^
spec/routing/points_routing_spec.rb:35:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/points/1").to route_to("points#destroy", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/points_routing_spec.rb:35:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/points/1").to route_to("points#destroy", id: "1")
                                                                    ^^^
spec/routing/positions_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/positions_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe PositionsController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/positions_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions").to route_to("positions#index")
                  ^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:6:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions").to route_to("positions#index")
                                            ^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions/new").to route_to("positions#new")
                  ^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:10:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions/new").to route_to("positions#new")
                                                ^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions/1").to route_to("positions#show", id: "1")
                  ^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:14:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions/1").to route_to("positions#show", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:14:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions/1").to route_to("positions#show", id: "1")
                                                                    ^^^
spec/routing/positions_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions/1/edit").to route_to("positions#edit", id: "1")
                  ^^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:18:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions/1/edit").to route_to("positions#edit", id: "1")
                                                   ^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:18:74: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/positions/1/edit").to route_to("positions#edit", id: "1")
                                                                         ^^^
spec/routing/positions_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/positions_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/positions").to route_to("positions#create")
                   ^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:23:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/positions").to route_to("positions#create")
                                             ^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/positions/1").to route_to("positions#update", id: "1")
                  ^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:27:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/positions/1").to route_to("positions#update", id: "1")
                                              ^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:27:71: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/positions/1").to route_to("positions#update", id: "1")
                                                                      ^^^
spec/routing/positions_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/positions/1").to route_to("positions#update", id: "1")
                    ^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:31:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/positions/1").to route_to("positions#update", id: "1")
                                                ^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:31:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/positions/1").to route_to("positions#update", id: "1")
                                                                        ^^^
spec/routing/positions_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/positions/1").to route_to("positions#destroy", id: "1")
                     ^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:35:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/positions/1").to route_to("positions#destroy", id: "1")
                                                 ^^^^^^^^^^^^^^^^^^^
spec/routing/positions_routing_spec.rb:35:75: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/positions/1").to route_to("positions#destroy", id: "1")
                                                                          ^^^
spec/spec_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'simplecov' ...
^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'simplecov'
^
spec/spec_helper.rb:52:1: C: [Correctable] Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/unit/unit_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/unit/unit_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [34/25]
RSpec.describe Event, type: :model do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    subject do
^^^^
spec/unit/unit_spec.rb:5:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        described_class.new(event_type: 'Monthly Meeting', start_date: '2022-02-14', end_date: '2022-02-14', start_time: '5:00', end_time: '6:00', description: 'Monthly meeting for February', points: 10)
    ^^^^
spec/unit/unit_spec.rb:5:121: C: [Correctable] Layout/LineLength: Line is too long. [203/120]
        described_class.new(event_type: 'Monthly Meeting', start_date: '2022-02-14', end_date: '2022-02-14', start_time: '5:00', end_time: '6:00', description: 'Monthly meeting for February', points: 10)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:9:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        expect(subject).to be_valid
    ^^^^
spec/unit/unit_spec.rb:13:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.event_type = nil
    ^^^^
spec/unit/unit_spec.rb:18:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.start_date = nil
    ^^^^
spec/unit/unit_spec.rb:23:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.description = nil
    ^^^^
spec/unit/unit_spec.rb:28:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.points = nil
    ^^^^
spec/unit/unit_spec.rb:33:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.end_date = nil
    ^^^^
spec/unit/unit_spec.rb:38:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.start_time = nil
    ^^^^
spec/unit/unit_spec.rb:42:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.end_time = nil
    ^^^^
spec/unit/unit_spec.rb:48:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    subject do
^^^^
spec/unit/unit_spec.rb:49:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        described_class.new(name: 'John Smith')
    ^^^^
spec/unit/unit_spec.rb:53:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        expect(subject).to be_valid
    ^^^^
spec/unit/unit_spec.rb:57:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.name = nil
    ^^^^
spec/unit/unit_spec.rb:60:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/unit/unit_spec.rb:64:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    subject do
^^^^
spec/unit/unit_spec.rb:65:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        described_class.new(member_id: 1, event_id: 5, points: 10)
    ^^^^
spec/unit/unit_spec.rb:69:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        expect(subject).to be_valid
    ^^^^
spec/unit/unit_spec.rb:72:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.member_id = nil
    ^^^^
spec/unit/unit_spec.rb:76:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        subject.event_id = nil
    ^^^^
spec/unit/unit_spec.rb:79:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:80:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/views/dashboard/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/dashboard/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/dashboard/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "dashboard/index.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/events/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "events/edit", type: :view do
               ^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Event.create!(.
      event_type: "Meeting", ...
      ^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event_type: "Meeting",
                  ^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:7:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      start_date: "2022-02-11",
                  ^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      description: "Monthly Meeting",
                   ^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:13:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit event form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:16:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", event_path(@event), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:16:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", event_path(@event), "post" do
                                                                  ^^^^^^
spec/views/events/edit.html.erb_spec.rb:17:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/events/edit.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_type]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_type]"
                                     ^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:20:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[description]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:20:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[description]"
                                     ^^^^^^^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/events/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "events/index", type: :view do
               ^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      Event.create!( ...
      ^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:7:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        event_type: "Meeting",
                    ^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:8:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        start_date: "2022-02-11",
                    ^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:9:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        description: "Monthly Meeting",
                     ^^^^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:13:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        event_type: "Meeting",
                    ^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:14:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        start_date: "2022-02-11",
                    ^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:15:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        description: "Monthly Meeting",
                     ^^^^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:18:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/events/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/events/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "events/new", type: :view do
               ^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:6:9: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Event.new(.
        event_type: "Meeting", ...
        ^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:6:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        event_type: "Meeting",
                    ^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:7:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        start_date: "2022-02-11",
                    ^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:8:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        description: "Monthly Meeting",
                     ^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:10:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 6 (not 4)
    ))
    ^
spec/views/events/new.html.erb_spec.rb:13:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new event form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:16:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", events_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:16:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", events_path, "post" do
                                                           ^^^^^^
spec/views/events/new.html.erb_spec.rb:17:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/events/new.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_type]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_type]"
                                     ^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:20:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[description]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:20:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[description]"
                                     ^^^^^^^^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/events/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "events/show", type: :view do
               ^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:6:9: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Event.create!(.
        event_type: "Meeting", ...
        ^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:6:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        event_type: "Meeting",
                    ^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:7:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        start_date: "2022-02-11",
                    ^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:8:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        description: "Monthly Meeting",
                     ^^^^^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:10:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 6 (not 4)
    ))
    ^
spec/views/leaderboard/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/leaderboard/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/leaderboard/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "leaderboard/index.html.erb", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/members/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "members/edit", type: :view do
               ^^^^^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Member.create!(.
      name: "MyString", ...
      ^^^^^^^^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:6:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      name: "MyString",
            ^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:7:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      events_attended: "MyString"
                       ^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit member form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", member_path(@member), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:14:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", member_path(@member), "post" do
                                                                    ^^^^^^
spec/views/members/edit.html.erb_spec.rb:15:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/members/edit.html.erb_spec.rb:16:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "member[name]"
                    ^^^^^^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:16:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "member[name]"
                                     ^^^^^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "member[events_attended]"
                    ^^^^^^^^^^^^^^^
spec/views/members/edit.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "member[events_attended]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/members/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "members/index", type: :view do
               ^^^^^^^^^^^^^^^
spec/views/members/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      Member.create!( ...
      ^^^^^^^^^^^^^^^
spec/views/members/index.html.erb_spec.rb:7:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        name: "Name",
              ^^^^^^
spec/views/members/index.html.erb_spec.rb:8:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        events_attended: "Events Attended"
                         ^^^^^^^^^^^^^^^^^
spec/views/members/index.html.erb_spec.rb:11:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        name: "Name",
              ^^^^^^
spec/views/members/index.html.erb_spec.rb:12:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        events_attended: "Events Attended"
                         ^^^^^^^^^^^^^^^^^
spec/views/members/index.html.erb_spec.rb:14:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/members/index.html.erb_spec.rb:17:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of members" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/index.html.erb_spec.rb:19:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Name".to_s, count: 2
                  ^^^^^^^
spec/views/members/index.html.erb_spec.rb:19:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Name".to_s, count: 2
                                 ^^^^^^
spec/views/members/index.html.erb_spec.rb:20:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Events Attended".to_s, count: 2
                  ^^^^^^^
spec/views/members/index.html.erb_spec.rb:20:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Events Attended".to_s, count: 2
                                 ^^^^^^^^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/members/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "members/new", type: :view do
               ^^^^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Member.new(.
      name: "MyString", ...
      ^^^^^^^^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:6:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      name: "MyString",
            ^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:7:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      events_attended: "MyString"
                       ^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new member form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", members_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:14:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", members_path, "post" do
                                                            ^^^^^^
spec/views/members/new.html.erb_spec.rb:15:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/members/new.html.erb_spec.rb:16:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "member[name]"
                    ^^^^^^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:16:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "member[name]"
                                     ^^^^^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "member[events_attended]"
                    ^^^^^^^^^^^^^^^
spec/views/members/new.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "member[events_attended]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/members/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/members/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "members/show", type: :view do
               ^^^^^^^^^^^^^^
spec/views/members/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Member.create!(.
      name: "Name", ...
      ^^^^^^^^^^^^^
spec/views/members/show.html.erb_spec.rb:6:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      name: "Name",
            ^^^^^^
spec/views/members/show.html.erb_spec.rb:7:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      events_attended: "Events Attended"
                       ^^^^^^^^^^^^^^^^^
spec/views/members/show.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/points/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/points/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/points/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "points/edit", type: :view do
               ^^^^^^^^^^^^^
spec/views/points/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Point.create!(.
      member_id: 1, ...
      ^^^^^^^^^^^^^
spec/views/points/edit.html.erb_spec.rb:12:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit point form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/points/edit.html.erb_spec.rb:15:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/views/points/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/points/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/points/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "points/index", type: :view do
               ^^^^^^^^^^^^^^
spec/views/points/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      Point.create!( ...
      ^^^^^^^^^^^^^^
spec/views/points/index.html.erb_spec.rb:16:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/points/index.html.erb_spec.rb:18:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/views/points/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/points/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/points/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "points/new", type: :view do
               ^^^^^^^^^^^^
spec/views/points/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Point.new(.
      member_id: 1, ...
      ^^^^^^^^^^^^^
spec/views/points/new.html.erb_spec.rb:12:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new point form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/points/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/points/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/points/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "points/show", type: :view do
               ^^^^^^^^^^^^^
spec/views/points/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Point.create!(.
      member_id: 2, ...
      ^^^^^^^^^^^^^
spec/views/points/show.html.erb_spec.rb:12:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/views/points/show.html.erb_spec.rb:12:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/views/positions/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/positions/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/positions/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "positions/edit", type: :view do
               ^^^^^^^^^^^^^^^^
spec/views/positions/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Position.create!(.
      member_id: 1, ...
      ^^^^^^^^^^^^^
spec/views/positions/edit.html.erb_spec.rb:7:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      position_name: "MyString"
                     ^^^^^^^^^^
spec/views/positions/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/positions/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/positions/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "positions/index", type: :view do
               ^^^^^^^^^^^^^^^^^
spec/views/positions/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      Position.create!( ...
      ^^^^^^^^^^^^^^^^^
spec/views/positions/index.html.erb_spec.rb:8:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        position_name: "Position Name"
                       ^^^^^^^^^^^^^^^
spec/views/positions/index.html.erb_spec.rb:12:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        position_name: "Position Name"
                       ^^^^^^^^^^^^^^^
spec/views/positions/index.html.erb_spec.rb:14:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/positions/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/positions/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/positions/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "positions/new", type: :view do
               ^^^^^^^^^^^^^^^
spec/views/positions/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Position.new(.
      member_id: 1, ...
      ^^^^^^^^^^^^^
spec/views/positions/new.html.erb_spec.rb:7:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      position_name: "MyString"
                     ^^^^^^^^^^
spec/views/positions/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/positions/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/positions/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "positions/show", type: :view do
               ^^^^^^^^^^^^^^^^
spec/views/positions/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Position.create!(.
      member_id: 2, ...
      ^^^^^^^^^^^^^
spec/views/positions/show.html.erb_spec.rb:7:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      position_name: "Position Name"
                     ^^^^^^^^^^^^^^^
spec/views/positions/show.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/application_system_test_case.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/application_system_test_case.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/channels/application_cable/connection_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:3:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ApplicationCable::ConnectionTest < ActionCable::Connection::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/controllers/events_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get new" do
       ^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:18:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create event" do
       ^^^^^^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:20:121: C: [Correctable] Layout/LineLength: Line is too long. [278/120]
      post events_url, params: { event: { description: @event.description, end_date: @event.end_date, end_time: @event.end_time, members_attended: @event.members_attended, points: @event.points, start_date: @event.start_date, start_time: @event.start_time, type: @event.type } }
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should show event" do
       ^^^^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:31:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get edit" do
       ^^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:36:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update event" do
       ^^^^^^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:37:121: C: [Correctable] Layout/LineLength: Line is too long. [284/120]
    patch event_url(@event), params: { event: { description: @event.description, end_date: @event.end_date, end_time: @event.end_time, members_attended: @event.members_attended, points: @event.points, start_date: @event.start_date, start_time: @event.start_time, type: @event.type } }
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/events_controller_test.rb:41:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy event" do
       ^^^^^^^^^^^^^^^^^^^^^^
test/models/event_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/models/event_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/event_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/system/events_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "application_system_test_case" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "application_system_test_case"
^
test/system/events_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "application_system_test_case"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "visiting the index" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:10:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Events"
                    ^^^^
test/system/events_test.rb:10:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Events"
                                ^^^^^^^^
test/system/events_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "creating a Event" do
       ^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:15:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "New Event"
             ^^^^^^^^^^^
test/system/events_test.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Description", with: @event.description
            ^^^^^^^^^^^^^
test/system/events_test.rb:18:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "End date", with: @event.end_date
            ^^^^^^^^^^
test/system/events_test.rb:19:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "End time", with: @event.end_time
            ^^^^^^^^^^
test/system/events_test.rb:20:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Members attended", with: @event.members_attended
            ^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:21:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Points", with: @event.points
            ^^^^^^^^
test/system/events_test.rb:22:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Start date", with: @event.start_date
            ^^^^^^^^^^^^
test/system/events_test.rb:23:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Start time", with: @event.start_time
            ^^^^^^^^^^^^
test/system/events_test.rb:24:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Type", with: @event.type
            ^^^^^^
test/system/events_test.rb:25:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Event"
             ^^^^^^^^^^^^^^
test/system/events_test.rb:27:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Event was successfully created"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:28:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/events_test.rb:31:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "updating a Event" do
       ^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:33:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Edit", match: :first
             ^^^^^^
test/system/events_test.rb:35:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Description", with: @event.description
            ^^^^^^^^^^^^^
test/system/events_test.rb:36:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "End date", with: @event.end_date
            ^^^^^^^^^^
test/system/events_test.rb:37:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "End time", with: @event.end_time
            ^^^^^^^^^^
test/system/events_test.rb:38:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Members attended", with: @event.members_attended
            ^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:39:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Points", with: @event.points
            ^^^^^^^^
test/system/events_test.rb:40:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Start date", with: @event.start_date
            ^^^^^^^^^^^^
test/system/events_test.rb:41:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Start time", with: @event.start_time
            ^^^^^^^^^^^^
test/system/events_test.rb:42:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Type", with: @event.type
            ^^^^^^
test/system/events_test.rb:43:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Update Event"
             ^^^^^^^^^^^^^^
test/system/events_test.rb:45:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Event was successfully updated"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:46:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/events_test.rb:49:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "destroying a Event" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/events_test.rb:52:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Destroy", match: :first
               ^^^^^^^^^
test/system/events_test.rb:55:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Event was successfully destroyed"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['RAILS_ENV'] ||= 'test'
^
test/test_helper.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/environment"
                 ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/test_help"
        ^^^^^^^^^^^^^^^^^
test/test_helper.rb:5:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ActiveSupport::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^

123 files inspected, 1001 offenses detected, 877 offenses auto-correctable
